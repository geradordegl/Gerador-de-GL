/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;
import javax.swing.text.Highlighter;

/**
 *
 * @author hiago
 */
public class TelaPrincipalView extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipalView
     */
    public TelaPrincipalView() {
        initComponents();
        
        caixaTexto.setEditable(true);
        //caixaTexto.setContentType("txt/html");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        caixaTexto = new javax.swing.JTextPane();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        fontSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        searchTxtField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuTexto = new javax.swing.JMenu();
        carregarTextoOp = new javax.swing.JMenuItem();
        exemplosMenu = new javax.swing.JMenu();
        selecionarExemplosOp = new javax.swing.JMenuItem();
        exibirExemplosOp = new javax.swing.JMenuItem();
        limparExemplosOption = new javax.swing.JMenuItem();
        menuGramática = new javax.swing.JMenu();
        gerarGramaticaOp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerador de GL");

        caixaTexto.setMaximumSize(new java.awt.Dimension(2000, 4096));
        jScrollPane1.setViewportView(caixaTexto);

        jToolBar1.setRollover(true);
        jToolBar1.setEnabled(false);

        jLabel1.setText("Fonte ");
        jToolBar1.add(jLabel1);

        fontSpinner.setValue(14);
        fontSpinner.setMaximumSize(new java.awt.Dimension(100, 100));
        jToolBar1.add(fontSpinner);

        jLabel2.setText("      ");
        jToolBar1.add(jLabel2);

        searchBtn.setText("Pesquisar");
        searchBtn.setEnabled(false);
        searchBtn.setFocusable(false);
        searchBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(searchBtn);

        searchTxtField.setMaximumSize(new java.awt.Dimension(250, 100));
        jToolBar1.add(searchTxtField);

        menuTexto.setText("Texto");

        carregarTextoOp.setText("Carregar Texto");
        menuTexto.add(carregarTextoOp);

        jMenuBar1.add(menuTexto);

        exemplosMenu.setText("Exemplos");

        selecionarExemplosOp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        selecionarExemplosOp.setText("Selecionar Texto Marcado Como Exemplo");
        exemplosMenu.add(selecionarExemplosOp);

        exibirExemplosOp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exibirExemplosOp.setText("Exibir Exemplos");
        exemplosMenu.add(exibirExemplosOp);

        limparExemplosOption.setText("LimparExemplos");
        exemplosMenu.add(limparExemplosOption);

        jMenuBar1.add(exemplosMenu);

        menuGramática.setText("Gramática");

        gerarGramaticaOp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        gerarGramaticaOp.setText("Gerar Gramática");
        menuGramática.add(gerarGramaticaOp);

        jMenuBar1.add(menuGramática);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane caixaTexto;
    private javax.swing.JMenuItem carregarTextoOp;
    private javax.swing.JMenu exemplosMenu;
    private javax.swing.JMenuItem exibirExemplosOp;
    private javax.swing.JSpinner fontSpinner;
    private javax.swing.JMenuItem gerarGramaticaOp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem limparExemplosOption;
    private javax.swing.JMenu menuGramática;
    private javax.swing.JMenu menuTexto;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxtField;
    private javax.swing.JMenuItem selecionarExemplosOp;
    // End of variables declaration//GEN-END:variables
    
    public JTextPane getCaixaTexto() {
        return caixaTexto;
    }

    public JMenuItem getCarregarTextoOp() {
        return carregarTextoOp;
    }

    public JMenu getExemplosMenu() {
        return exemplosMenu;
    }

    public JMenuItem getExibirExemplosOp() {
        return exibirExemplosOp;
    }

    public JMenuItem getGerarGramaticaOp() {
        return gerarGramaticaOp;
    }
    
    public JMenu getMenuTexto() {
        return menuTexto;
    }

    public JMenuItem getLimparExemplosOption() {
        return limparExemplosOption;
    }

    public JSpinner getFontSpinner() {
        return fontSpinner;
    }
    
    public JMenuItem getSelecionarExemplosOp() {
        return selecionarExemplosOp;
    }

    public JButton getSearchBtn() {
        return searchBtn;
    }

    public JTextField getSearchTxtField() {
        return searchTxtField;
    }
    
    class MyHighlighterPainter extends DefaultHighlighter.DefaultHighlightPainter{
        public MyHighlighterPainter(Color color){
            super(color);
        }        
    }
        
        Highlighter.HighlightPainter myHighlightPainter = new MyHighlighterPainter(new Color(112, 205, 255));
        public void hightLight(String pattern){
            removeHightLights();
            try{
                Highlighter hilite = caixaTexto.getHighlighter();
                Document doc = caixaTexto.getDocument();
                String text = doc.getText(0, doc.getLength());
                int pos = 0;
                while((pos=text.toUpperCase().indexOf(pattern.toUpperCase(),pos))>=0){
                    hilite.addHighlight(pos, pos+pattern.length(), myHighlightPainter);
                    pos += pattern.length();
                }
                
            }
            catch(Exception e){
                System.out.println("Erro na busca");
            }
        }
        public void removeHightLights(){
            Highlighter hilite = caixaTexto.getHighlighter();
            Highlighter.Highlight[] hilites = hilite.getHighlights();
            for(int i =0;  i< hilites.length;i++){
                if(hilites[i].getPainter() instanceof MyHighlighterPainter){
                    hilite.removeHighlight(hilites[i]);
                }
            }
                    
        }
}
